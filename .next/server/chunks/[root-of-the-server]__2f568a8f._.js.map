{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/ixyo/Documents/cheersdo/src/app/api/user/route.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { NextRequest, NextResponse } from \"next/server\";\n\nconst prisma = new PrismaClient();\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const email = searchParams.get(\"email\");\n\n  if (!email) {\n    return NextResponse.json({ message: \"Missing email\" }, { status: 400 });\n  }\n\n  try {\n    const user = await prisma.user.findUnique({ where: { email } });\n    if (!user) {\n      return NextResponse.json({ message: \"User not found\" }, { status: 400 });\n    }\n    return NextResponse.json({ user });\n  } catch (error) {\n    console.error(\"GET /api/user error\", error);\n    return NextResponse.json(\n      { message: \"Failed to fetch user\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,IAAI,GAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,QAAQ,aAAa,GAAG,CAAC;IAE/B,IAAI,CAAC,OAAO;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACvE;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE;YAAM;QAAE;QAC7D,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAK;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAuB,GAClC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}