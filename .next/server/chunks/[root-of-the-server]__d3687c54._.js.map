{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/ixyo/Documents/cheersdo/src/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\nimport { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: [\"query\"],\n  });\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\n\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/ixyo/Documents/cheersdo/src/app/api/task/route.ts"],"sourcesContent":["import {prisma} from \"@/lib/prisma\"\nimport { NextResponse } from \"next/server\"\n\nexport async function POST(req:Request) {\n    const body = await req.json()\n    const {title, deadline, userId, user} = body\n    const newTask = await prisma.task.create({\n        data:{\n            title,\n            deadline: new Date(deadline),\n            user:{\n                connect: {id: userId},\n                \n            },\n        },\n    })\n    return NextResponse.json(newTask)\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAW;IAClC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,GAAG;IACxC,MAAM,UAAU,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrC,MAAK;YACD;YACA,UAAU,IAAI,KAAK;YACnB,MAAK;gBACD,SAAS;oBAAC,IAAI;gBAAM;YAExB;QACJ;IACJ;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B","debugId":null}}]
}