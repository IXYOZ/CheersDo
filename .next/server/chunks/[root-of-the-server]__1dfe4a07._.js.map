{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/ixyo/Documents/cheersdo/src/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\nimport { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: [\"query\"],\n  });\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/ixyo/Documents/cheersdo/src/app/api/notify-tasks/route.ts"],"sourcesContent":["import {prisma} from \"@/lib/prisma\"\nimport { NextApiRequest, NextApiResponse } from \"next\"\nimport dayjs from \"dayjs\"\n\nexport default async function handler(req:NextApiRequest, res: NextApiResponse) {\n    const tomorrow = dayjs().add(1, \"day\").toDate()\n    const now = new Date()\n\n    const tasks = await prisma.task.findMany({\n        where:{\n            deadline:{\n                gte: now,\n                lte: tomorrow,\n            },\n        },\n        include: {user: true},\n    })\n    res.status(200).json(tasks)\n}"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEe,eAAe,QAAQ,GAAkB,EAAE,GAAoB;IAC1E,MAAM,WAAW,CAAA,GAAA,uIAAA,CAAA,UAAK,AAAD,IAAI,GAAG,CAAC,GAAG,OAAO,MAAM;IAC7C,MAAM,MAAM,IAAI;IAEhB,MAAM,QAAQ,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACrC,OAAM;YACF,UAAS;gBACL,KAAK;gBACL,KAAK;YACT;QACJ;QACA,SAAS;YAAC,MAAM;QAAI;IACxB;IACA,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;AACzB","debugId":null}}]
}